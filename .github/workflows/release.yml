name: Release

on:
  push:
    branches: [main]
    tags:
      - "v*"
  pull_request:
jobs:
  continuous-integration:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 #v4.2.2
        with:
          fetch-depth: 0
      - name: Use Node.js
        uses: actions/setup-node@49933ea5288caeca8642d1e84afbd3f7d6820020 #v4.4.0
        with:
          node-version-file: .nvmrc
          cache: "yarn"
          registry-url: "https://npm.pkg.github.com/"
          scope: "@frameless"
      - run: yarn install --frozen-lockfile
      - name: Make the root envfile
        uses: SpicyPizza/create-envfile@ace6d4f5d7802b600276c23ca417e669f1a06f6f #v2.0.3
        with:
          envkey_DEBUG: false
          envkey_HOST: ${{ secrets.HOST }}
          envkey_PORT: ${{ secrets.PORT }}
          envkey_DATABASE_HOST: ${{ secrets.DATABASE_HOST }}
          envkey_APP_KEYS: ${{ secrets.APP_KEYS }}
          envkey_API_TOKEN_SALT: ${{ secrets.API_TOKEN_SALT }}
          envkey_ADMIN_JWT_SECRET: ${{ secrets.ADMIN_JWT_SECRET }}
          envkey_JWT_SECRET: ${{ secrets.JWT_SECRET }}
          envkey_MATOMO_HOST: ${{ secrets.MATOMO_HOST }}
          envkey_MATOMO_SITE_ID: ${{ secrets.MATOMO_SITE_ID }}
          envkey_PREVIEW_SECRET_TOKEN: ${{ secrets.PREVIEW_SECRET_TOKEN }}
          envkey_TRANSFER_TOKEN_SALT: ${{ secrets.TRANSFER_TOKEN_SALT }}
          envkey_DATABASE_CLIENT: ${{ secrets.DATABASE_CLIENT }}
          envkey_DATABASE_PORT: ${{ secrets.DATABASE_PORT }}
          envkey_STRAPI_PRIVATE_URL: ${{ secrets.STRAPI_PRIVATE_URL }}
          envkey_DATABASE_NAME: ${{ secrets.DATABASE_NAME }}
          envkey_DATABASE_USERNAME: ${{ secrets.DATABASE_USERNAME }}
          envkey_DATABASE_PASSWORD: ${{ secrets.DATABASE_PASSWORD }}
          envkey_DATABASE_SSL: ${{ secrets.DATABASE_SSL }}
          envkey_NODE_ENV: ${{ secrets.NODE_ENV }}
          envkey_OPEN_FORMS_API_TOKEN: ${{ secrets.OPEN_FORMS_API_TOKEN }}
          envkey_OPEN_FORMS_API_URL: ${{ secrets.OPEN_FORMS_API_URL }}
          envkey_PANDOSEARCH_API_URL: ${{ secrets.PANDOSEARCH_API_URL }}
          envkey_FRONTEND_PUBLIC_URL: ${{ secrets.FRONTEND_PUBLIC_URL }}
          envkey_PGADMIN_DEFAULT_EMAIL: ${{ secrets.PGADMIN_DEFAULT_EMAIL }}
          envkey_PGADMIN_DEFAULT_PASSWORD: ${{ secrets.PGADMIN_DEFAULT_PASSWORD }}
          envkey_STRAPI_PUBLIC_URL: ${{ secrets.STRAPI_PUBLIC_URL }}
          envkey_STRAPI_ENV_LABEL: ${{ secrets.STRAPI_ENV_LABEL }}
          envkey_OGONE_PAYMENT_SERVICE_URL: ${{ secrets.OGONE_PAYMENT_SERVICE_URL }}
          file_name: .prod.env
          fail_on_empty: false
      - name: Lint
        env:
          NODE_OPTIONS: "--max_old_space_size=4096"
        run: yarn run lint
      - name: Test
        run: yarn run test
      - name: Upload coverage reports to Codecov
        uses: codecov/codecov-action@e28ff129e5465c2c0dcc6f003fc735cb6ae0c673 # v4.0.1
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
      - name: Build
        run: yarn run build
      - name: Upload artifact for GitHub Pages
        uses: actions/upload-pages-artifact@56afc609e74202658d3ffba0e8f6dda462b719fa # v3.0.1
        with:
          path: apps/strapi.frameless.io/build/
      - name: Upload Build artifacts
        uses: actions/upload-artifact@ea165f8d65b6e75b540449e92b4886f43607fa02 # v4.6.2
        with:
          name: build
          path: apps/tiptap-sandbox/dist/
  continuous-deployment:
    runs-on: ubuntu-latest
    permissions:
      packages: write
    steps:
      - name: Checkout
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 #v4.2.2
      - name: Check Free Disk Space
        uses: jlumbroso/free-disk-space@54081f138730dfa15788a46383842cd2f914a1be #v1.3.1
        with:
          swap-storage: false
      - name: Docker meta
        id: meta
        uses: docker/metadata-action@902fa8ec7d6ecbf8d84d538b9b233a880e428804 #v5.7.0
        with:
          images: |
            ghcr.io/${{ github.repository }}
          tags: |
            type=ref,event=pr
            type=semver,pattern={{version}}
            type=semver,pattern={{major}}.{{minor}}
            type=raw,value={{sha}},enable=${{ github.ref_type != 'tag' }}
      - name: Set up QEMU
        uses: docker/setup-qemu-action@29109295f81e9208d7d86ff1c6c12d2833863392 #v3.6.0
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@b5ca514318bd6ebac0fb2aedd5d36ec1b5c232a2 #v3.10.0
      - name: Login to GitHub Container Registry
        uses: docker/login-action@74a5d142397b4f367a81961eba4e8cd7edddf772 #v3.4.0
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GH_CLASSIC_TOKEN }}
      - name: Build and push
        uses: docker/build-push-action@14487ce63c7a62a4a324b0bfb37086795e31c6c1 #v6.16.0
        with:
          context: .
          file: Dockerfile.prod
          push: ${{ github.event_name != 'pull_request' }}
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
  publish-npm:
    runs-on: ubuntu-latest
    needs: continuous-integration
    if: github.ref == 'refs/heads/main'
    steps:
      - name: Checkout
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 #v4.2.2
      - name: Use Node.js
        uses: actions/setup-node@49933ea5288caeca8642d1e84afbd3f7d6820020 #v4.4.0
        with:
          node-version-file: .nvmrc
          cache: "yarn"
          registry-url: "https://npm.pkg.github.com/"
          scope: "@frameless"
      - name: Install
        run: yarn install --frozen-lockfile
      - name: Build
        run: yarn run build
      - name: Publish to GitHub repository
        if: github.ref == 'refs/heads/main'
        uses: changesets/action@06245a4e0a36c064a573d4150030f5ec548e4fcc # v1.4.10
        id: changeset
        env:
          GIT_AUTHOR_EMAIL: "devops@frameless.io"
          GIT_AUTHOR_NAME: "Frameless DevOps"
          GIT_COMMITTER_EMAIL: "devops@frameless.io"
          GIT_COMMITTER_NAME: "Frameless DevOps"
          GITHUB_TOKEN: ${{ secrets.GH_TOKEN }}
          NODE_AUTH_TOKEN: ${{ secrets.GH_CLASSIC_TOKEN }}
        with:
          commit: "docs(release): strapi packages"
          setupGitUser: false
          title: "docs(release): strapi packages"
          publish: "yarn run publish"
  publish-strapi-docs-website:
    runs-on: ubuntu-latest
    needs: continuous-integration
    if: github.ref == 'refs/heads/main'
    environment:
      name: github-pages
      url: ${{ steps.deploy-pages.outputs.page_url }}
    permissions:
      pages: write
      id-token: write
    steps:
      - name: Deploy to GitHub Pages
        id: deploy-pages
        uses: actions/deploy-pages@d6db90164ac5ed86f2b6aed7e0febac5b3c0c03e # v4.0.5
  deploy-to-vercel:
    runs-on: ubuntu-latest
    needs: continuous-integration
    steps:
      - name: Checkout
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 #v4.2.2
      - name: Download build artifacts
        uses: actions/download-artifact@d3f86a106a0bac45b974a628896c90dbdf5c8093 #v4.3.0
        with:
          name: build
          path: apps/tiptap-sandbox/dist/
      - name: Start Deploy to Vercel
        uses: bobheadxi/deployments@648679e8e4915b27893bd7dbc35cb504dc915bc8 # v1.5.0
        id: deployment-preview
        with:
          step: start
          token: ${{ secrets.GITHUB_TOKEN }}
          env: Preview
      - name: Deploy to Vercel/Preview
        id: vercel-action-preview
        if: github.ref != 'refs/heads/main'
        uses: amondnet/vercel-action@888da851026e0573da056b061931bcb765a915c4 # v41.1.4
        with:
          vercel-token: ${{ secrets.VERCEL_TOKEN }}
          vercel-org-id: ${{ secrets.VERCEL_ORG_ID }}
          vercel-project-id: ${{ secrets.VERCEL_PROJECT_ID }}
          scope: ${{ secrets.VERCEL_ORG_ID }}
          github-token: ${{ secrets.GITHUB_TOKEN }}
      - name: Deploy to Vercel/Production
        uses: amondnet/vercel-action@888da851026e0573da056b061931bcb765a915c4 # v41.1.4
        id: vercel-action-production
        if: github.event_name == 'push' && github.ref == 'refs/heads/main'
        with:
          vercel-token: ${{ secrets.VERCEL_TOKEN }}
          vercel-org-id: ${{ secrets.VERCEL_ORG_ID }}
          vercel-project-id: ${{ secrets.VERCEL_PROJECT_ID }}
          scope: ${{ secrets.VERCEL_ORG_ID }}
          github-comment: false
          vercel-args: "--prod"
          github-token: ${{ secrets.GITHUB_TOKEN }}
      - name: Update Deployment Status on Vercel
        uses: bobheadxi/deployments@648679e8e4915b27893bd7dbc35cb504dc915bc8 # v1.5.0
        if: github.ref != 'refs/heads/main'
        with:
          step: finish
          token: ${{ secrets.GITHUB_TOKEN }}
          status: ${{ job.status }}
          deployment_id: ${{ steps.deployment-preview.outputs.deployment_id }}
          env_url: ${{ steps.vercel-action-preview.outputs.preview-url }}
          env: ${{ steps.deployment-preview.outputs.env }}
