FROM node:20.10-alpine as build
# Installing libvips-dev for sharp Compatibility
RUN apk update && apk add --no-cache libc6-compat build-base gcc bash autoconf automake zlib-dev libpng-dev vips-dev > /dev/null 2>&1
ENV PNPM_HOME="/pnpm"
ENV PATH="$PNPM_HOME:$PATH"
ENV STRAPI_PUBLIC_URL=${STRAPI_PUBLIC_URL}
ARG STRAPI_PUBLIC_URL
RUN npm install -g pnpm@8
ARG NODE_ENV=production
COPY ./package.json ./pnpm-lock.yaml ./.npmrc ./pnpm-workspace.yaml ./
RUN pnpm -g add patch-package node-gyp turbo
WORKDIR /opt/app
COPY ./ .
RUN turbo prune @frameless/pdc-dashboard --docker && \
    turbo prune @frameless/pdc-frontend --docker && \ 
    turbo prune @frameless/vth-dashboard --docker && \
    turbo prune @frameless/vth-frontend --docker && \
    turbo prune @frameless/kennisbank-dashboard --docker && \ 
    turbo prune @frameless/kennisbank-frontend --docker && \
    turbo prune @frameless/pdc-sc --docker

# Build target dependencies #
#############################
FROM build AS dependencies
# Install prod dependencies
COPY .gitignore .gitignore
COPY --from=build /opt/app/out/json/ .
COPY --from=build /opt/app/out/pnpm-lock.yaml ./pnpm-lock.yaml

RUN --mount=type=cache,id=pnpm,target=/pnpm/store NODE_ENV=production pnpm install --prod --no-frozen-lockfile && \
    # Cache prod dependencies
    cp -R node_modules /prod_node_modules && \
    # Install dev dependencies
    NODE_ENV=development pnpm install

# Build target builder #
########################
FROM build AS builder

# Build the project
COPY --from=build /opt/app/out/full/ .
COPY --from=dependencies /opt/app/node_modules /opt/app/node_modules
COPY --from=dependencies /opt/app /opt/app

WORKDIR /opt/app
RUN pnpm build && \
    rm -rf node_modules

# Build target production #
###########################
FROM build AS production
COPY --from=build /opt/app /opt/app
COPY --from=build /opt/app/out/full/ .
COPY --from=dependencies /prod_node_modules /opt/app/node_modules
COPY --from=builder /opt/app /opt/app

RUN set -eux; \
    chmod +x ./bin/wait-for-it.sh && \
    addgroup --system --gid 1001 pdcgroup && \
    adduser --system --uid 1001 --ingroup pdcgroup pdcuser && \
    chown -R pdcuser:pdcgroup /opt/app

USER pdcuser

ENV NODE_ENV=${NODE_ENV}
EXPOSE 1337
CMD ["pnpm", "start"]
