version: "3"
services:
  strapi:
    container_name: strapi
    build:
      context: .
      dockerfile: Dockerfile.dev
    image: strapi:latest
    restart: unless-stopped
    volumes:
      - ./package.json:/opt/app/package.json
      - ./package-lock.json:/opt/app/package-lock.json
      - ./apps/strapi-dashboard/config:/opt/app/apps/strapi-dashboard/config
      - ./apps/strapi-dashboard/src:/opt/app/apps/strapi-dashboard/src
      - ./apps/strapi-dashboard/package.json:/opt/app/apps/strapi-dashboard/package.json
      - ./apps/strapi-dashboard/public/uploads:/opt/app/apps/strapi-dashboard/public/uploads
    command: npm run --workspace apps/strapi-dashboard dev
    environment:
      HOST: ${HOST}
      PORT: ${PORT}
      APP_KEYS: ${APP_KEYS}
      ADMIN_JWT_SECRET: ${ADMIN_JWT_SECRET}
      JWT_SECRET: ${JWT_SECRET}
      API_TOKEN_SALT: ${API_TOKEN_SALT}
      PREVIEW_SECRET_TOKEN: ${PREVIEW_SECRET_TOKEN}
      DATABASE_CLIENT: ${DATABASE_CLIENT}
      DATABASE_HOST: strapi_db
      DATABASE_PORT: ${DATABASE_PORT}
      DATABASE_NAME: ${DATABASE_NAME}
      DATABASE_USERNAME: ${DATABASE_USERNAME}
      DATABASE_PASSWORD: ${DATABASE_PASSWORD}
      STRAPI_FRONTEND_URL: ${STRAPI_FRONTEND_URL}
      NODE_ENV: ${NODE_ENV}
    ports:
      - "1337:1337"
    networks:
      - strapi
    depends_on:
      - strapi_db
  frontend:
    container_name: frontend
    build:
      context: .
      dockerfile: Dockerfile.dev
    restart: unless-stopped
    command: ./bin/wait-for-it.sh strapi:1337 -- npm run --workspace apps/frontend dev
    environment:
      REVALIDATE_SECRET_TOKEN: ${REVALIDATE_SECRET_TOKEN}
      PREVIEW_SECRET_TOKEN: ${PREVIEW_SECRET_TOKEN}
      STRAPI_HOSTNAME: ${STRAPI_HOSTNAME}
      STRAPI_FRONTEND_URL: ${STRAPI_FRONTEND_URL}
      STRAPI_BACKEND_URL: ${STRAPI_BACKEND_URL}
    ports:
      - "3000:3000"
    networks:
      - strapi
    depends_on:
      - strapi
      - strapi_db
  strapi_db:
    container_name: strapi_db
    platform: linux/amd64 #for platform error on Apple M1 chips
    restart: unless-stopped
    env_file: .env
    image: postgres:12.0-alpine
    environment:
      POSTGRES_USER: ${DATABASE_USERNAME}
      POSTGRES_PASSWORD: ${DATABASE_PASSWORD}
      POSTGRES_DB: ${DATABASE_NAME}
    healthcheck:
      test:
        [
          "CMD-SHELL",
          "sh -c 'pg_isready -U ${DATABASE_USERNAME} -d ${DATABASE_NAME}'",
        ]
      interval: 10s
      timeout: 3s
      retries: 3
    volumes:
      - strapi-data:/var/lib/postgresql/data/
    ports:
      - "5432:5432"
    networks:
      - strapi
  pgadmin:
    container_name: pgadmin4_container
    image: dpage/pgadmin4
    restart: always
    environment:
      - PGADMIN_DEFAULT_EMAIL=admin@admin.com
      - PGADMIN_DEFAULT_PASSWORD=root
    ports:
      - "8080:80"
    networks:
      - strapi
    depends_on:
      - strapi_db

volumes:
  strapi-data:

networks:
  strapi:
    name: Strapi
    driver: bridge
