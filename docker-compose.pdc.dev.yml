version: "3"
services:
  pdc_strapi:
    container_name: pdc_strapi
    build:
      context: .
      dockerfile: Dockerfile.dev
    image: strapi:latest
    restart: unless-stopped
    volumes:
      - ./package.json:/opt/app/package.json
      - ./yarn.lock:/opt/app/yarn.lock
      - ./apps/pdc-dashboard/config:/opt/app/apps/pdc-dashboard/config
      - ./apps/pdc-dashboard/src:/opt/app/apps/pdc-dashboard/src
      - ./apps/pdc-dashboard/package.json:/opt/app/apps/pdc-dashboard/package.json
      - ./apps/pdc-dashboard/public/:/opt/app/apps/pdc-dashboard/public/
    entrypoint: ["/bin/sh", "-c"]
    command:
      - |
        npm run dev --workspace @frameless/pdc-dashboard
    environment:
      ADMIN_JWT_SECRET: ${ADMIN_JWT_SECRET}
      API_TOKEN_SALT: ${API_TOKEN_SALT}
      APP_KEYS: ${APP_KEYS}
      DATABASE_CLIENT: ${DATABASE_CLIENT}
      DATABASE_HOST: pdc_strapi_db
      DATABASE_NAME: ${DATABASE_NAME}
      DATABASE_PASSWORD: ${DATABASE_PASSWORD}
      DATABASE_PORT: ${DATABASE_PORT}
      DATABASE_USERNAME: ${DATABASE_USERNAME}
      FLO_LEGAL_API_TOKEN: ${FLO_LEGAL_API_TOKEN}
      FLO_LEGAL_API_URL: ${FLO_LEGAL_API_URL}
      FRONTEND_PUBLIC_URL: ${FRONTEND_PUBLIC_URL}
      HOST: ${HOST}
      JWT_SECRET: ${JWT_SECRET}
      NODE_ENV: ${NODE_ENV}
      OPEN_FORMS_API_TOKEN: ${OPEN_FORMS_API_TOKEN}
      OPEN_FORMS_API_URL: ${OPEN_FORMS_API_URL}
      PORT: ${PORT}
      PREVIEW_SECRET_TOKEN: ${PREVIEW_SECRET_TOKEN}
      STRAPI_ENV_LABEL: ${STRAPI_ENV_LABEL}
      TRANSFER_TOKEN_SALT: ${TRANSFER_TOKEN_SALT}
    ports:
      - "1337:1337"
    networks:
      - pdc_strapi_network
    depends_on:
      - pdc_strapi_db
  pdc_frontend:
    container_name: pdc_frontend
    build:
      context: .
      dockerfile: Dockerfile.dev
    restart: unless-stopped
    command: ./bin/wait-for-it.sh -s pdc_strapi:1337 -t 25 -- yarn workspace @frameless/pdc-frontend dev
    environment:
      CSP_CONNECT_SRC_URLS: ${CSP_CONNECT_SRC_URLS}
      CSP_FONT_SRC_URLS: ${CSP_FONT_SRC_URLS}
      CSP_FORM_ACTION_URLS: ${CSP_FORM_ACTION_URLS}
      CSP_FRAME_SRC_URLS: ${CSP_FRAME_SRC_URLS}
      CSP_IMG_SRC_URLS: ${CSP_IMG_SRC_URLS}
      CSP_SCRIPT_SRC_URLS: ${CSP_SCRIPT_SRC_URLS}
      CSP_STYLE_SRC_URLS: ${CSP_STYLE_SRC_URLS}
      CSP_WORKER_SRC_URLS: ${CSP_WORKER_SRC_URLS}
      FLO_LEGAL_API_TOKEN: ${FLO_LEGAL_API_TOKEN}
      FLO_LEGAL_API_URL: ${FLO_LEGAL_API_URL}
      FRONTEND_PUBLIC_URL: ${FRONTEND_PUBLIC_URL}
      MATOMO_HOST: ${MATOMO_HOST}
      MATOMO_SITE_ID: ${MATOMO_SITE_ID}
      OGONE_PAYMENT_SERVICE_URL: ${OGONE_PAYMENT_SERVICE_URL}
      OPEN_FORMS_API_TOKEN: ${OPEN_FORMS_API_TOKEN}
      OPEN_FORMS_API_URL: ${OPEN_FORMS_API_URL}
      OPEN_FORMS_CSS_URL: ${OPEN_FORMS_CSS_URL}
      OPEN_FORMS_SDK_URL: ${OPEN_FORMS_SDK_URL}
      PANDOSEARCH_API_URL: ${PANDOSEARCH_API_URL}
      PREVIEW_SECRET_TOKEN: ${PREVIEW_SECRET_TOKEN}
      STRAPI_PRIVATE_URL: ${STRAPI_PRIVATE_URL}
      STRAPI_PUBLIC_URL: ${STRAPI_PUBLIC_URL}
      SURVEY_RUN_APIKEY: ${SURVEY_RUN_APIKEY}
      SURVEY_RUN_GUID: ${SURVEY_RUN_GUID}
      SURVEY_RUN_URL: ${SURVEY_RUN_URL}
    volumes: # enable hot-reload
      - ./apps/pdc-frontend/src:/opt/app/apps/pdc-frontend/src
      - ./apps/pdc-frontend/public:/opt/app/apps/pdc-frontend/public
      - ./apps/pdc-frontend/.next:/opt/app/apps/pdc-frontend/.next
      - ./apps/pdc-frontend/package.json:/opt/app/apps/pdc-frontend/package.json
    ports:
      - "3000:3000"
    networks:
      - pdc_strapi_network
    depends_on:
      - pdc_strapi
      - pdc_strapi_db
  pdc_samenwerkende-catalogi:
    container_name: pdc_samenwerkende-catalogi
    build:
      context: .
      dockerfile: Dockerfile.dev
    restart: unless-stopped
    command: npm run start:pdc-sc
    environment:
      STRAPI_PRIVATE_URL: ${STRAPI_PRIVATE_URL}
      FRONTEND_PUBLIC_URL: ${FRONTEND_PUBLIC_URL}
    ports:
      - "4000:4000"
    networks:
      - pdc_strapi_network
    depends_on:
      - pdc_strapi
      - pdc_strapi_db
  overige-objecten-api:
    container_name: overige-objecten-api
    build:
      context: .
      dockerfile: Dockerfile.dev
    restart: unless-stopped
    volumes:
      - ./apps/overige-objecten-api/src/docs:/opt/app/apps/overige-objecten-api/dist/src/docs
    command: yarn workspace @frameless/overige-objecten-api start
    environment:
      STRAPI_PRIVATE_URL: ${STRAPI_PRIVATE_URL}
      OVERIGE_OBJECTEN_API_PORT: ${OVERIGE_OBJECTEN_API_PORT}
      OVERIGE_OBJECTEN_API_CORS: ${OVERIGE_OBJECTEN_API_CORS}
    ports:
      - "4001:4001"
    networks:
      - pdc_strapi_network
    depends_on:
      - pdc_strapi
      - pdc_strapi_db
  strapi-admin-extensions:
    container_name: strapi-admin-extensions
    build:
      context: .
      dockerfile: Dockerfile.dev
    restart: unless-stopped
    command: yarn workspace @frameless/strapi-admin-extensions start
    environment:
      OVERIGE_OBJECTEN_API_URL: ${OVERIGE_OBJECTEN_API_URL}
      STRAPI_ADMIN_EXTENSIONS_PORT: ${STRAPI_ADMIN_EXTENSIONS_PORT}
    ports:
      - "4002:4002"
    networks:
      - pdc_strapi_network
    depends_on:
      - overige-objecten-api
  pdc_strapi_db:
    container_name: pdc_strapi_db
    platform: linux/amd64 #for platform error on Apple M1 chips
    restart: unless-stopped
    image: postgres:12.0-alpine
    environment:
      POSTGRES_USER: ${DATABASE_USERNAME}
      POSTGRES_PASSWORD: ${DATABASE_PASSWORD}
      POSTGRES_DB: ${DATABASE_NAME}
    healthcheck:
      test:
        [
          "CMD-SHELL",
          "sh -c 'pg_isready -U ${DATABASE_USERNAME} -d ${DATABASE_NAME}'",
        ]
      interval: 10s
      timeout: 3s
      retries: 3
    volumes:
      - pdc-strapi-data:/var/lib/postgresql/data/
    ports:
      - "5432:5432"
    networks:
      - pdc_strapi_network
  pdc_pgadmin:
    container_name: pdc_pgadmin
    image: dpage/pgadmin4
    restart: always
    environment:
      PGADMIN_DEFAULT_EMAIL: ${PGADMIN_DEFAULT_EMAIL}
      PGADMIN_DEFAULT_PASSWORD: ${PGADMIN_DEFAULT_PASSWORD}
    ports:
      - "8080:80"
    networks:
      - pdc_strapi_network
    depends_on:
      - pdc_strapi_db

volumes:
  pdc-strapi-data:

networks:
  pdc_strapi_network:
    name: Strapi network
    driver: bridge
